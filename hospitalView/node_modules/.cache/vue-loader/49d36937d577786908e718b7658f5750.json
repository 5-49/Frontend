{"remainingRequest":"C:\\Users\\86182\\Desktop\\GitHub\\Frontend\\hospitalView\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\86182\\Desktop\\GitHub\\Frontend\\hospitalView\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86182\\Desktop\\GitHub\\Frontend\\hospitalView\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86182\\Desktop\\GitHub\\Frontend\\hospitalView\\src\\components\\welcome.vue?vue&type=template&id=323aa482&","dependencies":[{"path":"C:\\Users\\86182\\Desktop\\GitHub\\Frontend\\hospitalView\\src\\components\\welcome.vue","mtime":1626077357849},{"path":"C:\\Users\\86182\\Desktop\\GitHub\\Frontend\\hospitalView\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625561057867},{"path":"C:\\Users\\86182\\Desktop\\GitHub\\Frontend\\hospitalView\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1625561065494},{"path":"C:\\Users\\86182\\Desktop\\GitHub\\Frontend\\hospitalView\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625561057867},{"path":"C:\\Users\\86182\\Desktop\\GitHub\\Frontend\\hospitalView\\node_modules\\vue-loader\\lib\\index.js","mtime":1625561065493}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}